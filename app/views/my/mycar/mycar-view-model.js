var observable_1 = require("data/observable");
var ListViewLayoutsModel = (function (_super) {
    __extends(ListViewLayoutsModel, _super);
    function ListViewLayoutsModel() {
        var _this = _super.call(this) || this;
        _this._pictures = [
            { "title": "A Quick Snack Burger", "author": "Nice to Meat You", "photo": "main1", "category": "mains" },
            { "title": "Chilli Meat Bites", "author": "Nice to Meat You", "photo": "main2", "category": "mains" },
            { "title": "Your Favourite Ribs", "author": "Nice to Meat You", "photo": "main3", "category": "mains" },
            { "title": "Burger at the Max", "author": "Burger Queen", "photo": "main4", "category": "mains" },
            { "title": "Special Burger with Fries", "author": "Burger Queen", "photo": "main5", "category": "mains" },
            { "title": "Everybody's Dream Hotdog", "author": "Prince Burger", "photo": "main6", "category": "mains" },
            { "title": "Quinoa Balls", "author": "ReFresh", "photo": "main7", "category": "mains" },
            { "title": "Bruschetta with Cheese", "author": "Sandwiches and More", "photo": "main8", "category": "mains" },
            { "title": "Quick Toast with Bacon", "author": "Sandwiches and More", "photo": "main9", "category": "mains" },
            { "title": "Special Steak with Fries", "author": "Nice to Meat You", "photo": "main10", "category": "mains" },
            { "title": "Hotdog for Two", "author": "Prince Burger", "photo": "main11", "category": "mains" },
            { "title": "Bruschetta with Salmon Fish", "author": "Ron's Fishery", "photo": "main12", "category": "mains" },
            { "title": "Chief's Steak", "author": "Nice to Meat You", "photo": "main13", "category": "mains" },
        ];
        _this._isLinearActive = true;
        return _this;
    }
    Object.defineProperty(ListViewLayoutsModel.prototype, "pictures", {
        get: function () {
            return this._pictures;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListViewLayoutsModel.prototype, "isLinearActive", {
        get: function () {
            return this._isLinearActive;
        },
        set: function (value) {
            this._isLinearActive = value;
            this.notifyPropertyChange("isLinearActive", value);
        },
        enumerable: true,
        configurable: true
    });
    return ListViewLayoutsModel;
}(observable_1.Observable));
exports.ListViewLayoutsModel = ListViewLayoutsModel;
//# sourceMappingURL=data:application/json;base64,